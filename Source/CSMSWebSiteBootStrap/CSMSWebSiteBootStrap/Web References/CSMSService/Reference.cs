//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace CSMSWebSiteBootStrap.CSMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CSMSWebserviceSoap", Namespace="http://tempuri.org/")]
    public partial class CSMSWebservice : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CustomerLoadProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminViewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminAddNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminUpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdminDeleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerViewProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerAddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerUpdateProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerDeleteProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerLoadCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerViewCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerAddCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerUpdateCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ManagerDeleteCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerAddOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomerInsertOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionViewOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionViewDeliveringOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionViewOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionAcceptOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionDenyOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionConfrimSuccessOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersionConfrimFailOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersonMinusProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback SalespersonAddProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GuestLoginOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CSMSWebservice() {
            this.Url = global::CSMSWebSiteBootStrap.Properties.Settings.Default.CSMSWebSiteBootStrap_CSMSService_CSMSWebservice;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CustomerLoadProductCompletedEventHandler CustomerLoadProductCompleted;
        
        /// <remarks/>
        public event AdminViewAccountCompletedEventHandler AdminViewAccountCompleted;
        
        /// <remarks/>
        public event AdminAddNewAccountCompletedEventHandler AdminAddNewAccountCompleted;
        
        /// <remarks/>
        public event AdminUpdateAccountCompletedEventHandler AdminUpdateAccountCompleted;
        
        /// <remarks/>
        public event AdminDeleteAccountCompletedEventHandler AdminDeleteAccountCompleted;
        
        /// <remarks/>
        public event ManagerViewProductsCompletedEventHandler ManagerViewProductsCompleted;
        
        /// <remarks/>
        public event ManagerAddProductCompletedEventHandler ManagerAddProductCompleted;
        
        /// <remarks/>
        public event ManagerUpdateProductCompletedEventHandler ManagerUpdateProductCompleted;
        
        /// <remarks/>
        public event ManagerDeleteProductCompletedEventHandler ManagerDeleteProductCompleted;
        
        /// <remarks/>
        public event ManagerLoadCategoriesCompletedEventHandler ManagerLoadCategoriesCompleted;
        
        /// <remarks/>
        public event ManagerViewCategoriesCompletedEventHandler ManagerViewCategoriesCompleted;
        
        /// <remarks/>
        public event ManagerAddCategoriesCompletedEventHandler ManagerAddCategoriesCompleted;
        
        /// <remarks/>
        public event ManagerUpdateCategoriesCompletedEventHandler ManagerUpdateCategoriesCompleted;
        
        /// <remarks/>
        public event ManagerDeleteCategoriesCompletedEventHandler ManagerDeleteCategoriesCompleted;
        
        /// <remarks/>
        public event CustomerAddOrderCompletedEventHandler CustomerAddOrderCompleted;
        
        /// <remarks/>
        public event CustomerInsertOrderDetailCompletedEventHandler CustomerInsertOrderDetailCompleted;
        
        /// <remarks/>
        public event SalespersionViewOrdersCompletedEventHandler SalespersionViewOrdersCompleted;
        
        /// <remarks/>
        public event SalespersionViewDeliveringOrdersCompletedEventHandler SalespersionViewDeliveringOrdersCompleted;
        
        /// <remarks/>
        public event SalespersionViewOrderDetailCompletedEventHandler SalespersionViewOrderDetailCompleted;
        
        /// <remarks/>
        public event SalespersionAcceptOrdersCompletedEventHandler SalespersionAcceptOrdersCompleted;
        
        /// <remarks/>
        public event SalespersionDenyOrdersCompletedEventHandler SalespersionDenyOrdersCompleted;
        
        /// <remarks/>
        public event SalespersionConfrimSuccessOrdersCompletedEventHandler SalespersionConfrimSuccessOrdersCompleted;
        
        /// <remarks/>
        public event SalespersionConfrimFailOrdersCompletedEventHandler SalespersionConfrimFailOrdersCompleted;
        
        /// <remarks/>
        public event SalespersonMinusProductCompletedEventHandler SalespersonMinusProductCompleted;
        
        /// <remarks/>
        public event SalespersonAddProductCompletedEventHandler SalespersonAddProductCompleted;
        
        /// <remarks/>
        public event GuestLoginCompletedEventHandler GuestLoginCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerLoadProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable CustomerLoadProduct() {
            object[] results = this.Invoke("CustomerLoadProduct", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void CustomerLoadProductAsync() {
            this.CustomerLoadProductAsync(null);
        }
        
        /// <remarks/>
        public void CustomerLoadProductAsync(object userState) {
            if ((this.CustomerLoadProductOperationCompleted == null)) {
                this.CustomerLoadProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerLoadProductOperationCompleted);
            }
            this.InvokeAsync("CustomerLoadProduct", new object[0], this.CustomerLoadProductOperationCompleted, userState);
        }
        
        private void OnCustomerLoadProductOperationCompleted(object arg) {
            if ((this.CustomerLoadProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerLoadProductCompleted(this, new CustomerLoadProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminViewAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AdminViewAccount() {
            object[] results = this.Invoke("AdminViewAccount", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void AdminViewAccountAsync() {
            this.AdminViewAccountAsync(null);
        }
        
        /// <remarks/>
        public void AdminViewAccountAsync(object userState) {
            if ((this.AdminViewAccountOperationCompleted == null)) {
                this.AdminViewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminViewAccountOperationCompleted);
            }
            this.InvokeAsync("AdminViewAccount", new object[0], this.AdminViewAccountOperationCompleted, userState);
        }
        
        private void OnAdminViewAccountOperationCompleted(object arg) {
            if ((this.AdminViewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminViewAccountCompleted(this, new AdminViewAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminAddNewAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminAddNewAccount(string empname, string empusername, string emppassword, string emprole, string empsex, string empbrithdate, string emphiredate, string empaddress, string empphone, string empcity, string empcountry, float salary, int hourswork, int mgrid, bool empstatus) {
            this.Invoke("AdminAddNewAccount", new object[] {
                        empname,
                        empusername,
                        emppassword,
                        emprole,
                        empsex,
                        empbrithdate,
                        emphiredate,
                        empaddress,
                        empphone,
                        empcity,
                        empcountry,
                        salary,
                        hourswork,
                        mgrid,
                        empstatus});
        }
        
        /// <remarks/>
        public void AdminAddNewAccountAsync(string empname, string empusername, string emppassword, string emprole, string empsex, string empbrithdate, string emphiredate, string empaddress, string empphone, string empcity, string empcountry, float salary, int hourswork, int mgrid, bool empstatus) {
            this.AdminAddNewAccountAsync(empname, empusername, emppassword, emprole, empsex, empbrithdate, emphiredate, empaddress, empphone, empcity, empcountry, salary, hourswork, mgrid, empstatus, null);
        }
        
        /// <remarks/>
        public void AdminAddNewAccountAsync(
                    string empname, 
                    string empusername, 
                    string emppassword, 
                    string emprole, 
                    string empsex, 
                    string empbrithdate, 
                    string emphiredate, 
                    string empaddress, 
                    string empphone, 
                    string empcity, 
                    string empcountry, 
                    float salary, 
                    int hourswork, 
                    int mgrid, 
                    bool empstatus, 
                    object userState) {
            if ((this.AdminAddNewAccountOperationCompleted == null)) {
                this.AdminAddNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminAddNewAccountOperationCompleted);
            }
            this.InvokeAsync("AdminAddNewAccount", new object[] {
                        empname,
                        empusername,
                        emppassword,
                        emprole,
                        empsex,
                        empbrithdate,
                        emphiredate,
                        empaddress,
                        empphone,
                        empcity,
                        empcountry,
                        salary,
                        hourswork,
                        mgrid,
                        empstatus}, this.AdminAddNewAccountOperationCompleted, userState);
        }
        
        private void OnAdminAddNewAccountOperationCompleted(object arg) {
            if ((this.AdminAddNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminAddNewAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminUpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminUpdateAccount(
                    int empid, 
                    string empname, 
                    string empusername, 
                    string emppassword, 
                    string emprole, 
                    string empsex, 
                    string empbrithdate, 
                    string emphiredate, 
                    string empaddress, 
                    string empphone, 
                    string empcity, 
                    string empcountry, 
                    float salary, 
                    int hourswork, 
                    int mgrid, 
                    bool empstatus) {
            this.Invoke("AdminUpdateAccount", new object[] {
                        empid,
                        empname,
                        empusername,
                        emppassword,
                        emprole,
                        empsex,
                        empbrithdate,
                        emphiredate,
                        empaddress,
                        empphone,
                        empcity,
                        empcountry,
                        salary,
                        hourswork,
                        mgrid,
                        empstatus});
        }
        
        /// <remarks/>
        public void AdminUpdateAccountAsync(
                    int empid, 
                    string empname, 
                    string empusername, 
                    string emppassword, 
                    string emprole, 
                    string empsex, 
                    string empbrithdate, 
                    string emphiredate, 
                    string empaddress, 
                    string empphone, 
                    string empcity, 
                    string empcountry, 
                    float salary, 
                    int hourswork, 
                    int mgrid, 
                    bool empstatus) {
            this.AdminUpdateAccountAsync(empid, empname, empusername, emppassword, emprole, empsex, empbrithdate, emphiredate, empaddress, empphone, empcity, empcountry, salary, hourswork, mgrid, empstatus, null);
        }
        
        /// <remarks/>
        public void AdminUpdateAccountAsync(
                    int empid, 
                    string empname, 
                    string empusername, 
                    string emppassword, 
                    string emprole, 
                    string empsex, 
                    string empbrithdate, 
                    string emphiredate, 
                    string empaddress, 
                    string empphone, 
                    string empcity, 
                    string empcountry, 
                    float salary, 
                    int hourswork, 
                    int mgrid, 
                    bool empstatus, 
                    object userState) {
            if ((this.AdminUpdateAccountOperationCompleted == null)) {
                this.AdminUpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("AdminUpdateAccount", new object[] {
                        empid,
                        empname,
                        empusername,
                        emppassword,
                        emprole,
                        empsex,
                        empbrithdate,
                        emphiredate,
                        empaddress,
                        empphone,
                        empcity,
                        empcountry,
                        salary,
                        hourswork,
                        mgrid,
                        empstatus}, this.AdminUpdateAccountOperationCompleted, userState);
        }
        
        private void OnAdminUpdateAccountOperationCompleted(object arg) {
            if ((this.AdminUpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminUpdateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminDeleteAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AdminDeleteAccount(int empid) {
            this.Invoke("AdminDeleteAccount", new object[] {
                        empid});
        }
        
        /// <remarks/>
        public void AdminDeleteAccountAsync(int empid) {
            this.AdminDeleteAccountAsync(empid, null);
        }
        
        /// <remarks/>
        public void AdminDeleteAccountAsync(int empid, object userState) {
            if ((this.AdminDeleteAccountOperationCompleted == null)) {
                this.AdminDeleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdminDeleteAccountOperationCompleted);
            }
            this.InvokeAsync("AdminDeleteAccount", new object[] {
                        empid}, this.AdminDeleteAccountOperationCompleted, userState);
        }
        
        private void OnAdminDeleteAccountOperationCompleted(object arg) {
            if ((this.AdminDeleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdminDeleteAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerViewProducts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ManagerViewProducts() {
            object[] results = this.Invoke("ManagerViewProducts", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ManagerViewProductsAsync() {
            this.ManagerViewProductsAsync(null);
        }
        
        /// <remarks/>
        public void ManagerViewProductsAsync(object userState) {
            if ((this.ManagerViewProductsOperationCompleted == null)) {
                this.ManagerViewProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerViewProductsOperationCompleted);
            }
            this.InvokeAsync("ManagerViewProducts", new object[0], this.ManagerViewProductsOperationCompleted, userState);
        }
        
        private void OnManagerViewProductsOperationCompleted(object arg) {
            if ((this.ManagerViewProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerViewProductsCompleted(this, new ManagerViewProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerAddProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerAddProduct(string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus) {
            this.Invoke("ManagerAddProduct", new object[] {
                        productname,
                        categoryid,
                        importpirce,
                        unitprice,
                        productquantity,
                        productstatus});
        }
        
        /// <remarks/>
        public void ManagerAddProductAsync(string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus) {
            this.ManagerAddProductAsync(productname, categoryid, importpirce, unitprice, productquantity, productstatus, null);
        }
        
        /// <remarks/>
        public void ManagerAddProductAsync(string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus, object userState) {
            if ((this.ManagerAddProductOperationCompleted == null)) {
                this.ManagerAddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerAddProductOperationCompleted);
            }
            this.InvokeAsync("ManagerAddProduct", new object[] {
                        productname,
                        categoryid,
                        importpirce,
                        unitprice,
                        productquantity,
                        productstatus}, this.ManagerAddProductOperationCompleted, userState);
        }
        
        private void OnManagerAddProductOperationCompleted(object arg) {
            if ((this.ManagerAddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerAddProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerUpdateProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerUpdateProduct(int productid, string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus) {
            this.Invoke("ManagerUpdateProduct", new object[] {
                        productid,
                        productname,
                        categoryid,
                        importpirce,
                        unitprice,
                        productquantity,
                        productstatus});
        }
        
        /// <remarks/>
        public void ManagerUpdateProductAsync(int productid, string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus) {
            this.ManagerUpdateProductAsync(productid, productname, categoryid, importpirce, unitprice, productquantity, productstatus, null);
        }
        
        /// <remarks/>
        public void ManagerUpdateProductAsync(int productid, string productname, int categoryid, float importpirce, float unitprice, int productquantity, bool productstatus, object userState) {
            if ((this.ManagerUpdateProductOperationCompleted == null)) {
                this.ManagerUpdateProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerUpdateProductOperationCompleted);
            }
            this.InvokeAsync("ManagerUpdateProduct", new object[] {
                        productid,
                        productname,
                        categoryid,
                        importpirce,
                        unitprice,
                        productquantity,
                        productstatus}, this.ManagerUpdateProductOperationCompleted, userState);
        }
        
        private void OnManagerUpdateProductOperationCompleted(object arg) {
            if ((this.ManagerUpdateProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerUpdateProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerDeleteProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerDeleteProduct(int productid) {
            this.Invoke("ManagerDeleteProduct", new object[] {
                        productid});
        }
        
        /// <remarks/>
        public void ManagerDeleteProductAsync(int productid) {
            this.ManagerDeleteProductAsync(productid, null);
        }
        
        /// <remarks/>
        public void ManagerDeleteProductAsync(int productid, object userState) {
            if ((this.ManagerDeleteProductOperationCompleted == null)) {
                this.ManagerDeleteProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerDeleteProductOperationCompleted);
            }
            this.InvokeAsync("ManagerDeleteProduct", new object[] {
                        productid}, this.ManagerDeleteProductOperationCompleted, userState);
        }
        
        private void OnManagerDeleteProductOperationCompleted(object arg) {
            if ((this.ManagerDeleteProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerDeleteProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerLoadCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ManagerLoadCategories() {
            object[] results = this.Invoke("ManagerLoadCategories", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ManagerLoadCategoriesAsync() {
            this.ManagerLoadCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void ManagerLoadCategoriesAsync(object userState) {
            if ((this.ManagerLoadCategoriesOperationCompleted == null)) {
                this.ManagerLoadCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerLoadCategoriesOperationCompleted);
            }
            this.InvokeAsync("ManagerLoadCategories", new object[0], this.ManagerLoadCategoriesOperationCompleted, userState);
        }
        
        private void OnManagerLoadCategoriesOperationCompleted(object arg) {
            if ((this.ManagerLoadCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerLoadCategoriesCompleted(this, new ManagerLoadCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerViewCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ManagerViewCategories() {
            object[] results = this.Invoke("ManagerViewCategories", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ManagerViewCategoriesAsync() {
            this.ManagerViewCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void ManagerViewCategoriesAsync(object userState) {
            if ((this.ManagerViewCategoriesOperationCompleted == null)) {
                this.ManagerViewCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerViewCategoriesOperationCompleted);
            }
            this.InvokeAsync("ManagerViewCategories", new object[0], this.ManagerViewCategoriesOperationCompleted, userState);
        }
        
        private void OnManagerViewCategoriesOperationCompleted(object arg) {
            if ((this.ManagerViewCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerViewCategoriesCompleted(this, new ManagerViewCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerAddCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerAddCategories(string categoryname, string categorydescription) {
            this.Invoke("ManagerAddCategories", new object[] {
                        categoryname,
                        categorydescription});
        }
        
        /// <remarks/>
        public void ManagerAddCategoriesAsync(string categoryname, string categorydescription) {
            this.ManagerAddCategoriesAsync(categoryname, categorydescription, null);
        }
        
        /// <remarks/>
        public void ManagerAddCategoriesAsync(string categoryname, string categorydescription, object userState) {
            if ((this.ManagerAddCategoriesOperationCompleted == null)) {
                this.ManagerAddCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerAddCategoriesOperationCompleted);
            }
            this.InvokeAsync("ManagerAddCategories", new object[] {
                        categoryname,
                        categorydescription}, this.ManagerAddCategoriesOperationCompleted, userState);
        }
        
        private void OnManagerAddCategoriesOperationCompleted(object arg) {
            if ((this.ManagerAddCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerAddCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerUpdateCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerUpdateCategories(int categoryid, string categoryname, string categorydescription) {
            this.Invoke("ManagerUpdateCategories", new object[] {
                        categoryid,
                        categoryname,
                        categorydescription});
        }
        
        /// <remarks/>
        public void ManagerUpdateCategoriesAsync(int categoryid, string categoryname, string categorydescription) {
            this.ManagerUpdateCategoriesAsync(categoryid, categoryname, categorydescription, null);
        }
        
        /// <remarks/>
        public void ManagerUpdateCategoriesAsync(int categoryid, string categoryname, string categorydescription, object userState) {
            if ((this.ManagerUpdateCategoriesOperationCompleted == null)) {
                this.ManagerUpdateCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerUpdateCategoriesOperationCompleted);
            }
            this.InvokeAsync("ManagerUpdateCategories", new object[] {
                        categoryid,
                        categoryname,
                        categorydescription}, this.ManagerUpdateCategoriesOperationCompleted, userState);
        }
        
        private void OnManagerUpdateCategoriesOperationCompleted(object arg) {
            if ((this.ManagerUpdateCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerUpdateCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ManagerDeleteCategories", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ManagerDeleteCategories(int categoryid) {
            this.Invoke("ManagerDeleteCategories", new object[] {
                        categoryid});
        }
        
        /// <remarks/>
        public void ManagerDeleteCategoriesAsync(int categoryid) {
            this.ManagerDeleteCategoriesAsync(categoryid, null);
        }
        
        /// <remarks/>
        public void ManagerDeleteCategoriesAsync(int categoryid, object userState) {
            if ((this.ManagerDeleteCategoriesOperationCompleted == null)) {
                this.ManagerDeleteCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagerDeleteCategoriesOperationCompleted);
            }
            this.InvokeAsync("ManagerDeleteCategories", new object[] {
                        categoryid}, this.ManagerDeleteCategoriesOperationCompleted, userState);
        }
        
        private void OnManagerDeleteCategoriesOperationCompleted(object arg) {
            if ((this.ManagerDeleteCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ManagerDeleteCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerAddOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CustomerAddOrder(string orderid, System.DateTime orderdate, string orderadress, float total, string cusphone) {
            this.Invoke("CustomerAddOrder", new object[] {
                        orderid,
                        orderdate,
                        orderadress,
                        total,
                        cusphone});
        }
        
        /// <remarks/>
        public void CustomerAddOrderAsync(string orderid, System.DateTime orderdate, string orderadress, float total, string cusphone) {
            this.CustomerAddOrderAsync(orderid, orderdate, orderadress, total, cusphone, null);
        }
        
        /// <remarks/>
        public void CustomerAddOrderAsync(string orderid, System.DateTime orderdate, string orderadress, float total, string cusphone, object userState) {
            if ((this.CustomerAddOrderOperationCompleted == null)) {
                this.CustomerAddOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerAddOrderOperationCompleted);
            }
            this.InvokeAsync("CustomerAddOrder", new object[] {
                        orderid,
                        orderdate,
                        orderadress,
                        total,
                        cusphone}, this.CustomerAddOrderOperationCompleted, userState);
        }
        
        private void OnCustomerAddOrderOperationCompleted(object arg) {
            if ((this.CustomerAddOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerAddOrderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomerInsertOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CustomerInsertOrderDetail(string orderid, int productid, float unitprice, int quantity) {
            this.Invoke("CustomerInsertOrderDetail", new object[] {
                        orderid,
                        productid,
                        unitprice,
                        quantity});
        }
        
        /// <remarks/>
        public void CustomerInsertOrderDetailAsync(string orderid, int productid, float unitprice, int quantity) {
            this.CustomerInsertOrderDetailAsync(orderid, productid, unitprice, quantity, null);
        }
        
        /// <remarks/>
        public void CustomerInsertOrderDetailAsync(string orderid, int productid, float unitprice, int quantity, object userState) {
            if ((this.CustomerInsertOrderDetailOperationCompleted == null)) {
                this.CustomerInsertOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomerInsertOrderDetailOperationCompleted);
            }
            this.InvokeAsync("CustomerInsertOrderDetail", new object[] {
                        orderid,
                        productid,
                        unitprice,
                        quantity}, this.CustomerInsertOrderDetailOperationCompleted, userState);
        }
        
        private void OnCustomerInsertOrderDetailOperationCompleted(object arg) {
            if ((this.CustomerInsertOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomerInsertOrderDetailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionViewOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SalespersionViewOrders() {
            object[] results = this.Invoke("SalespersionViewOrders", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SalespersionViewOrdersAsync() {
            this.SalespersionViewOrdersAsync(null);
        }
        
        /// <remarks/>
        public void SalespersionViewOrdersAsync(object userState) {
            if ((this.SalespersionViewOrdersOperationCompleted == null)) {
                this.SalespersionViewOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionViewOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionViewOrders", new object[0], this.SalespersionViewOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionViewOrdersOperationCompleted(object arg) {
            if ((this.SalespersionViewOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionViewOrdersCompleted(this, new SalespersionViewOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionViewDeliveringOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SalespersionViewDeliveringOrders() {
            object[] results = this.Invoke("SalespersionViewDeliveringOrders", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SalespersionViewDeliveringOrdersAsync() {
            this.SalespersionViewDeliveringOrdersAsync(null);
        }
        
        /// <remarks/>
        public void SalespersionViewDeliveringOrdersAsync(object userState) {
            if ((this.SalespersionViewDeliveringOrdersOperationCompleted == null)) {
                this.SalespersionViewDeliveringOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionViewDeliveringOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionViewDeliveringOrders", new object[0], this.SalespersionViewDeliveringOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionViewDeliveringOrdersOperationCompleted(object arg) {
            if ((this.SalespersionViewDeliveringOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionViewDeliveringOrdersCompleted(this, new SalespersionViewDeliveringOrdersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionViewOrderDetail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable SalespersionViewOrderDetail(string orderid) {
            object[] results = this.Invoke("SalespersionViewOrderDetail", new object[] {
                        orderid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void SalespersionViewOrderDetailAsync(string orderid) {
            this.SalespersionViewOrderDetailAsync(orderid, null);
        }
        
        /// <remarks/>
        public void SalespersionViewOrderDetailAsync(string orderid, object userState) {
            if ((this.SalespersionViewOrderDetailOperationCompleted == null)) {
                this.SalespersionViewOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionViewOrderDetailOperationCompleted);
            }
            this.InvokeAsync("SalespersionViewOrderDetail", new object[] {
                        orderid}, this.SalespersionViewOrderDetailOperationCompleted, userState);
        }
        
        private void OnSalespersionViewOrderDetailOperationCompleted(object arg) {
            if ((this.SalespersionViewOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionViewOrderDetailCompleted(this, new SalespersionViewOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionAcceptOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersionAcceptOrders(string orderid) {
            this.Invoke("SalespersionAcceptOrders", new object[] {
                        orderid});
        }
        
        /// <remarks/>
        public void SalespersionAcceptOrdersAsync(string orderid) {
            this.SalespersionAcceptOrdersAsync(orderid, null);
        }
        
        /// <remarks/>
        public void SalespersionAcceptOrdersAsync(string orderid, object userState) {
            if ((this.SalespersionAcceptOrdersOperationCompleted == null)) {
                this.SalespersionAcceptOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionAcceptOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionAcceptOrders", new object[] {
                        orderid}, this.SalespersionAcceptOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionAcceptOrdersOperationCompleted(object arg) {
            if ((this.SalespersionAcceptOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionAcceptOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionDenyOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersionDenyOrders(string orderid) {
            this.Invoke("SalespersionDenyOrders", new object[] {
                        orderid});
        }
        
        /// <remarks/>
        public void SalespersionDenyOrdersAsync(string orderid) {
            this.SalespersionDenyOrdersAsync(orderid, null);
        }
        
        /// <remarks/>
        public void SalespersionDenyOrdersAsync(string orderid, object userState) {
            if ((this.SalespersionDenyOrdersOperationCompleted == null)) {
                this.SalespersionDenyOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionDenyOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionDenyOrders", new object[] {
                        orderid}, this.SalespersionDenyOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionDenyOrdersOperationCompleted(object arg) {
            if ((this.SalespersionDenyOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionDenyOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionConfrimSuccessOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersionConfrimSuccessOrders(string orderid) {
            this.Invoke("SalespersionConfrimSuccessOrders", new object[] {
                        orderid});
        }
        
        /// <remarks/>
        public void SalespersionConfrimSuccessOrdersAsync(string orderid) {
            this.SalespersionConfrimSuccessOrdersAsync(orderid, null);
        }
        
        /// <remarks/>
        public void SalespersionConfrimSuccessOrdersAsync(string orderid, object userState) {
            if ((this.SalespersionConfrimSuccessOrdersOperationCompleted == null)) {
                this.SalespersionConfrimSuccessOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionConfrimSuccessOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionConfrimSuccessOrders", new object[] {
                        orderid}, this.SalespersionConfrimSuccessOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionConfrimSuccessOrdersOperationCompleted(object arg) {
            if ((this.SalespersionConfrimSuccessOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionConfrimSuccessOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersionConfrimFailOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersionConfrimFailOrders(string orderid) {
            this.Invoke("SalespersionConfrimFailOrders", new object[] {
                        orderid});
        }
        
        /// <remarks/>
        public void SalespersionConfrimFailOrdersAsync(string orderid) {
            this.SalespersionConfrimFailOrdersAsync(orderid, null);
        }
        
        /// <remarks/>
        public void SalespersionConfrimFailOrdersAsync(string orderid, object userState) {
            if ((this.SalespersionConfrimFailOrdersOperationCompleted == null)) {
                this.SalespersionConfrimFailOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersionConfrimFailOrdersOperationCompleted);
            }
            this.InvokeAsync("SalespersionConfrimFailOrders", new object[] {
                        orderid}, this.SalespersionConfrimFailOrdersOperationCompleted, userState);
        }
        
        private void OnSalespersionConfrimFailOrdersOperationCompleted(object arg) {
            if ((this.SalespersionConfrimFailOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersionConfrimFailOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersonMinusProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersonMinusProduct(int productid, int productquantity) {
            this.Invoke("SalespersonMinusProduct", new object[] {
                        productid,
                        productquantity});
        }
        
        /// <remarks/>
        public void SalespersonMinusProductAsync(int productid, int productquantity) {
            this.SalespersonMinusProductAsync(productid, productquantity, null);
        }
        
        /// <remarks/>
        public void SalespersonMinusProductAsync(int productid, int productquantity, object userState) {
            if ((this.SalespersonMinusProductOperationCompleted == null)) {
                this.SalespersonMinusProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersonMinusProductOperationCompleted);
            }
            this.InvokeAsync("SalespersonMinusProduct", new object[] {
                        productid,
                        productquantity}, this.SalespersonMinusProductOperationCompleted, userState);
        }
        
        private void OnSalespersonMinusProductOperationCompleted(object arg) {
            if ((this.SalespersonMinusProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersonMinusProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SalespersonAddProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SalespersonAddProduct(int productid, int productquantity) {
            this.Invoke("SalespersonAddProduct", new object[] {
                        productid,
                        productquantity});
        }
        
        /// <remarks/>
        public void SalespersonAddProductAsync(int productid, int productquantity) {
            this.SalespersonAddProductAsync(productid, productquantity, null);
        }
        
        /// <remarks/>
        public void SalespersonAddProductAsync(int productid, int productquantity, object userState) {
            if ((this.SalespersonAddProductOperationCompleted == null)) {
                this.SalespersonAddProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSalespersonAddProductOperationCompleted);
            }
            this.InvokeAsync("SalespersonAddProduct", new object[] {
                        productid,
                        productquantity}, this.SalespersonAddProductOperationCompleted, userState);
        }
        
        private void OnSalespersonAddProductOperationCompleted(object arg) {
            if ((this.SalespersonAddProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SalespersonAddProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GuestLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GuestLogin(string username, string password) {
            object[] results = this.Invoke("GuestLogin", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GuestLoginAsync(string username, string password) {
            this.GuestLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GuestLoginAsync(string username, string password, object userState) {
            if ((this.GuestLoginOperationCompleted == null)) {
                this.GuestLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGuestLoginOperationCompleted);
            }
            this.InvokeAsync("GuestLogin", new object[] {
                        username,
                        password}, this.GuestLoginOperationCompleted, userState);
        }
        
        private void OnGuestLoginOperationCompleted(object arg) {
            if ((this.GuestLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GuestLoginCompleted(this, new GuestLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CustomerLoadProductCompletedEventHandler(object sender, CustomerLoadProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomerLoadProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomerLoadProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AdminViewAccountCompletedEventHandler(object sender, AdminViewAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdminViewAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdminViewAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AdminAddNewAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AdminUpdateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void AdminDeleteAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerViewProductsCompletedEventHandler(object sender, ManagerViewProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagerViewProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagerViewProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerAddProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerUpdateProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerDeleteProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerLoadCategoriesCompletedEventHandler(object sender, ManagerLoadCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagerLoadCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagerLoadCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerViewCategoriesCompletedEventHandler(object sender, ManagerViewCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ManagerViewCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ManagerViewCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerAddCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerUpdateCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ManagerDeleteCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CustomerAddOrderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CustomerInsertOrderDetailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionViewOrdersCompletedEventHandler(object sender, SalespersionViewOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalespersionViewOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalespersionViewOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionViewDeliveringOrdersCompletedEventHandler(object sender, SalespersionViewDeliveringOrdersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalespersionViewDeliveringOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalespersionViewDeliveringOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionViewOrderDetailCompletedEventHandler(object sender, SalespersionViewOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SalespersionViewOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SalespersionViewOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionAcceptOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionDenyOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionConfrimSuccessOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersionConfrimFailOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersonMinusProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SalespersonAddProductCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GuestLoginCompletedEventHandler(object sender, GuestLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GuestLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GuestLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591